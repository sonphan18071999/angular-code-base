@import "./variables";

// 1. Responsive Breakpoints
@mixin responsive($breakpoint) {
  @if $breakpoint == xs { @media (min-width: 375px) and (max-width: 576px) { @content;
  font-size:$font-xs
  } }
  @else if $breakpoint == sm { @media (min-width: 577px) and (max-width: 768px) { @content; } }
  @else if $breakpoint == md { @media (min-width: 769px) and (max-width: 992px) { @content; } }
  @else if $breakpoint == lg { @media (min-width: 993px) and (max-width: 1200px) { @content; } }
  @else if $breakpoint == xl { @media (min-width: 1201px) and (max-width: 1920px) { @content; } }
  @else if $breakpoint == xxl { @media (min-width: 1921px) and (max-width: 3840px) { @content; } }
}

// 2. Flexbox Utility
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $gap: 0) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  gap: $gap;
}

// 3. Grid Layout
@mixin grid($columns: 2, $gap: 1rem) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// 4. Typography (Font Size + Line Height)
@mixin typography($size: 16px, $weight: normal, $lineHeight: 1.5, $color: inherit) {
  font-size: $size;
  font-weight: $weight;
  line-height: $lineHeight;
  color: $color;
}

// 5. Button Styles
@mixin button($bgColor: #007bff, $textColor: #fff, $padding: 10px 20px, $radius: 5px) {
  background-color: $bgColor;
  color: $textColor;
  padding: $padding;
  border-radius: $radius;
  border: none;
  cursor: pointer;
  transition: 0.3s;

  &:hover {
    background-color: darken($bgColor, 10%);
  }
}

// 6. Box Shadow
@mixin shadow($intensity: 10px) {
  box-shadow: 0px 4px $intensity rgba(0, 0, 0, 0.1);
}

// 7. Ellipsis Text Overflow
@mixin ellipsis($lines: 1) {
  @if $lines == 1 {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

// 8. Absolute Centering
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// 9. Border Radius Utility
@mixin radius($radius: 8px) {
  border-radius: $radius;
}

// 10. Transition Utility
@mixin transition($properties: all, $duration: 0.3s, $timing: ease-in-out) {
  transition: $properties $duration $timing;
}
